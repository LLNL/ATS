--------------------------------------------------------------------------------
--                 READ.ME for omp_test sample program                       --
--------------------------------------------------------------------------------

Sample use of lightweight ATS wrapper script

How to use:

    export PATH=/usr/gapps/ats/${SYS_TYPE}/7.0.111/bin:$PATH
    or
    export PATH=/usr/gapps/ats/${SYS_TYPE}/7.0.${USER}/bin:$PATH

    omp_test.c             <- Simple executable -- will be your projects exectuable(s)
    create_test_ats.py     <- Python script which will create the test.ats file
                              Enables projects to easily create tests with
                              variable number of MPI processes, code executables,
                              code arguments (test decks, etc), sandbox options,
                              and post test checkers.

How to build:
    
    Use the 'Makefile' to build omp_test.  Or use whatevever compiler you want,
    and compile omp_test.c by hand to generate omp_test.
    just ensure it has the proper flags to support OpenMP. 

How to run omp_test by hand:

    Sample Runs of the code to familiarize yourself with different rank and thread
    bindings to cores which may achieved  with various srun options.

    export OMP_NUM_THREADS=9
    srun -N2 -n4 -p pdebug ./omp_test 100 2
    srun -N2 -n4 -p pdebug --exclusive ./omp_test 100 2
    srun -N2 -n4 -c 9 -p pdebug --exclusive ./omp_test 100 2
    srun -N2 -n4 -c 9 -p pdebug --mpibind=on --exclusive ./omp_test 100 2
    srun -N2 -n4 -c 9 --cpu-bind=threads -p pdebug --exclusive ./omp_test 100 2

    Note the inefficiency in one or more of the above srun lines.  


Sample ATS runs of the code

   atslite1 --exclusive                     <- toss4 version
   atslite1 --smpi_off                      <- blueos version

--------------------------------------------------------------------------------
Toss 3 (rzgenie, etc.).  
--------------------------------------------------------------------------------
    export PATH=${PATH}:/usr/gapps/ats/scripts
    module load python/3.8.2
        // Modify this line to be the ats install you are testing
    export PATH=/usr/gapps/ats/${SYS_TYPE}/7.0.${USER}/bin:$PATH

    mpicxx -g -qopenmp -pthread -O2 -o omp_test omp_test.cc
    ./create_test_ats.py 
    atslite1 test.ats   

      # run ats on login node, let each test have
      # private allocation. This is especially 
      # useful for performance testing OpenMP

    ats test.ats --verbose --exclusive  --numNodes=3 

--------------------------------------------------------------------------------
Toss 4 (rzalastor, etc.). 
    exporting explicit MACHINE_TYPE as Toss 4 systems will have from 20 to 112 
    cores per node.  Alastor has 20, so use slurm20 when testing slurm runs.
--------------------------------------------------------------------------------
    export PATH=${PATH}:/usr/gapps/ats/scripts
    module load python/3.9.12
    export PATH=/usr/gapps/ats/${SYS_TYPE}/7.0.${USER}/bin:$PATH

    mpicxx -g -qopenmp -pthread -O2 -o omp_test omp_test.cc

    ./create_test_ats.py

    export MACHINE_TYPE=slurm20 <- if on alastor with 20 cores per cpu
    export MACHINE_TYPE=slurm36 <- if on genie or another 36 core machine

    atslite1 test.ats   
    ats test.ats --verbose --exclusive  --numNodes=3 

    export -n MACHINE_TYPE

        # Test with atsflux, will run flux under salloc on toss4 
    atsflux test.ats

    # POODLE TEST LINE (or any other system without cross node MPI)
    atslite1 test.ats --numNodes=1
    atsflux  test.ats --numNodes=1 --job_time=30

--------------------------------------------------------------------------------
Blueos (rzansel)  Uses LSF
--------------------------------------------------------------------------------
    export PATH=${PATH}:/usr/gapps/ats/scripts
    module load python/3.8.2
    export PATH=/usr/gapps/ats/${SYS_TYPE}/7.0.${USER}/bin:$PATH

    mpicxx -g -fopenmp -O2 -o omp_test omp_test.cc
    ./create_test_ats.py
    atslite1 --smpi_off test.ats
    atslite1 --smpi_off --jsrun_exclusive --verbose  test.ats 

--------------------------------------------------------------------------------
Whippet compilation notes (as of 2022 October 12)
Whippet test run notes using flux
--------------------------------------------------------------------------------
    export PATH=${PATH}:/usr/gapps/ats/scripts
    module load python/3.9.12
    export PATH=/usr/gapps/ats/${SYS_TYPE}/7.0.${USER}/bin:$PATH

    mpicc -g -qopenmp -pthread -O2 -o omp_test omp_test.cc -L /usr/lib64/flux -lpmi2
    LD_LIBRARY_PATH=/usr/lib64/flux
    ldd omp_test | grep pmi2

    ./create_test_ats.py
    atsflux test.ats


--------------------------------------------------------------------------------
--                           end of READ.ME                                   --
--------------------------------------------------------------------------------
